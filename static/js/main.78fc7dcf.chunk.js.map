{"version":3,"sources":["components/FriendCard/FriendCard.js","components/Nav/Nav.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","dataid","id","onClick","randomRender","alt","name","src","image","Nav","score","highScore","Wrapper","children","Header","App","state","friends","_this","forEach","clicked","alert","setState","resetGame","updateScore","newHighScore","randomOrganize","array","i","copy","n","length","Math","floor","random","push","newState","winning","setTimeout","_this2","this","components_Wrapper_Wrapper","components_Header_Header","components_Nav_Nav","map","friend","components_FriendCard_FriendCard","Object","assign","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.78fc7dcf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./FriendCard.css\";\r\n\r\nconst FriendCard = props => (\r\n  \r\n    <div className=\"card\">\r\n      <div className=\"img-container\" dataid={props.id} onClick={() => props.randomRender(props.id)}>\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n      {/* <span onClick={() => props.removeFriend(props.id)} className=\"remove\">ùòÖ</span> */}\r\n    </div>\r\n  // </div>\r\n\r\n);\r\n\r\nexport default FriendCard;","import React from 'react';\r\nimport './Nav.css';\r\n\r\nconst Nav = props => (\r\n    <div id=\"container\">\r\n    <nav className=\"navbar navbar-default\" >\r\n        <ul>\r\n            <li className=\"brand\">clicky-game</li>\r\n            <li>Click on a card to begin!</li>\r\n            \r\n            <li>Current Score: {props.score} | Highest Score: {props.highScore}  </li>\r\n        </ul>\r\n    </nav>\r\n    </div>\r\n);\r\n\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => (\r\n    // <div className = \"container\">\r\n    \r\n    \r\n        <div className=\"wrapper \">{props.children}\r\n    </div>\r\n    // </div>\r\n);\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./Header.css\";\r\nconst Header = props => (\r\n    <section className = \"container\">\r\n    \r\n        <div className=\"myHeader \">{props.children}\r\n        <p className = \"welcome\"> Welcome to Clicky Game!</p>\r\n        <p className = \"rules\"> Click on an image \"only once\" to score.</p> \r\n    </div>\r\n    </section>\r\n);\r\n\r\nexport default Header;","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Nav from \"./components/Nav\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header/Header.js\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    score: 0,\n    highScore: 0,\n    friends: friends\n  };\n\n\n  randomRender = id => {\n    this.state.friends.forEach((image) => {\n      if (image.id === id) {\n        if (image.clicked) {\n          // $(\"#myModal\").modal('toggle');\n          alert(\"YOU LOST!! You have selected this card twice\");\n          this.setState({})\n          this.resetGame();\n          return false;\n        }\n        else {\n          this.updateScore();\n          image.clicked = true;\n        }\n        if (this.state.score >= this.state.highScore) {\n          this.newHighScore();\n        }\n      }\n    });\n  }\n\n  randomOrganize = (array) => {\n    let copy = [], n = array.length, i;\n    while (n) {\n      i = Math.floor(Math.random() * array.length);\n      if (i in array) {\n        copy.push(array[i]);\n        delete array[i];\n        n--;\n      }\n    }\n    this.setState({ friends: copy });\n  }\n\n  updateScore = () => {\n    this.setState((newState) => ({\n      score: newState.score + 1\n    }), () => this.winning())\n  }\n\n  newHighScore = () => {\n    this.setState((newState) => ({\n      highScore: newState.score\n    }))\n  }\n\n  winning = () => {\n    if (this.state.score === this.state.friends.length) {\n      alert(\"YOU WIN!! Congratulations!\")\n      this.setState({});\n      this.resetGame();\n    }\n    else {\n      setTimeout(() => {\n        this.randomOrganize(this.state.friends)\n      }, 500);\n    }\n  }\n\n  resetGame = () => {\n    this.state.friends.forEach((image) => {\n      image.clicked = false;\n    })\n    this.setState({ score: 0 })\n  }\n\n\n  render() {\n    return (\n      <Wrapper>\n      <Header />\n        <Nav score={this.state.score} highScore={this.state.highScore} />\n        \n        {this.state.friends.map(friend => {\n          return <FriendCard\n            {...friend}\n            key={friend.id}\n            randomRender={this.randomRender}\n            randomOrganize={() => this.randomOrganize(this.state.friends)}\n          />;\n        })}\n      </Wrapper>\n    )\n  };\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}